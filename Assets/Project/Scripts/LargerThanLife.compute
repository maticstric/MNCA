#pragma kernel Init
#pragma kernel Main

#define GROUP_SIZE_X 8
#define GROUP_SIZE_Y 8

RWTexture2D<float4> CurrTexture;
RWTexture2D<float4> PrevTexture;

float rand(float2 uv) {
    float2 K1 = float2(
        23.14069263277926, // e^pi (Gelfond's constant)
        2.665144142690225  // 2^sqrt(2) (Gelfond-Schneider constant)
    );

    return frac(cos(dot(uv, K1)) * 12345.6789);
}

[numthreads(GROUP_SIZE_X,GROUP_SIZE_Y,1)]
void Init (uint3 id : SV_DispatchThreadID) {
    float random = rand(id.xy);
    CurrTexture[id.xy] = rand(id.xy) > 0.7 ? float4(1, 1, 1, 1) : float4(0, 0, 0, 0);
}

[numthreads(GROUP_SIZE_X,GROUP_SIZE_Y,1)]
void Main (uint3 id : SV_DispatchThreadID) {
    int range = 5;
    int b1 = 34;
    int b2 = 45;
    int a1 = 34;
    int a2 = 58;

    float4 sumFloat = 0;

    for (int i = -range; i <= range; i++) {
        for (int j = -range; j <= range; j++) {
            sumFloat += PrevTexture[id.xy + uint2(i, j)];
        }
    }

    int prevState = round(PrevTexture[id.xy].w);
    int sum = round(sumFloat.w);

    int newState = 0;

    if (prevState == 0) {
        if (sum >= b1 && sum <= b2) {
            newState = 1;
        }
    } else {
        if (sum >= a1 && sum <= a2) {
            newState = 1;
        }
    }

    CurrTexture[id.xy] = newState;
}